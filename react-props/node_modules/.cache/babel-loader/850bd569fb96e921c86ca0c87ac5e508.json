{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Desktop/learn/Learn_notes/react-props/src/App.js\";\nimport react, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  // displays random superhero names on a click\n  constructor(props) {\n    super(props);\n    this.state = {\n      heroArray: [\"Spiderman\", \"Thor\", \"Ironman\", \"Deadpool\", \"Batman\", \"Avatar\", \"StaticShock\", \"Superman\", \"Captain Marvel\", \"Wonder Woman\", \"Black Widow\"],\n      randomHero: 0\n    };\n  } // part 2 - create a method that will take some input (a click on screen) and return a change in our state object\n  // handle is a naming convention for methods\n\n\n  handleClick() {\n    // needs to invoke a function that returns a random number between 0 and length of array\n    Math.floor(Math.random() * this.state.heroArray.length);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" \", this.state.heroArray[0]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["react","Component","App","constructor","props","state","heroArray","randomHero","handleClick","Math","floor","random","length","render"],"sources":["/Users/alex/Desktop/learn/Learn_notes/react-props/src/App.js"],"sourcesContent":["import react, {Component} from 'react'\n\nclass App extends Component {\n  // displays random superhero names on a click\n  constructor(props) {\n    super(props)\n    this.state = {\n      heroArray: [\"Spiderman\", \"Thor\", \"Ironman\", \"Deadpool\", \"Batman\", \"Avatar\", \"StaticShock\", \"Superman\", \"Captain Marvel\", \"Wonder Woman\", \"Black Widow\"],\n      randomHero: 0\n    }\n  }\n  \n      // part 2 - create a method that will take some input (a click on screen) and return a change in our state object\n\n  // handle is a naming convention for methods\n  handleClick() {\n    // needs to invoke a function that returns a random number between 0 and length of array\n    Math.floor(Math.random() * this.state.heroArray.length)\n\n\n  }\n\n\n\n\n  render() {\n    return (\n      <>\n      <h1> {this.state.heroArray[0]}</h1>\n      </>\n\n    )\n  }\n}\n\nexport default App"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;EAC1B;EACAE,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACXC,SAAS,EAAE,CAAC,WAAD,EAAc,MAAd,EAAsB,SAAtB,EAAiC,UAAjC,EAA6C,QAA7C,EAAuD,QAAvD,EAAiE,aAAjE,EAAgF,UAAhF,EAA4F,gBAA5F,EAA8G,cAA9G,EAA8H,aAA9H,CADA;MAEXC,UAAU,EAAE;IAFD,CAAb;EAID,CARyB,CAUtB;EAEJ;;;EACAC,WAAW,GAAG;IACZ;IACAC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAAKN,KAAL,CAAWC,SAAX,CAAqBM,MAAhD;EAGD;;EAKDC,MAAM,GAAG;IACP,oBACE;MAAA,uBACA;QAAA,gBAAM,KAAKR,KAAL,CAAWC,SAAX,CAAqB,CAArB,CAAN;MAAA;QAAA;QAAA;QAAA;MAAA;IADA,iBADF;EAMD;;AA9ByB;;AAiC5B,eAAeJ,GAAf"},"metadata":{},"sourceType":"module"}